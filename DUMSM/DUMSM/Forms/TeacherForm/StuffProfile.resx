<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>